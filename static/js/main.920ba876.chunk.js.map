{"version":3,"sources":["assets/github_logo_white.png","serviceWorker.js","data/initial.js","data/reducer.js","components/Header.jsx","components/Nav.jsx","components/Player.jsx","data/axios.js","data/actions/api.js","data/actions/state.js","containers/Player.js","components/Players.jsx","containers/Players.js","components/TeamRoster.jsx","containers/TeamRoster.js","components/Footer.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initial","players","reducer","state","action","type","setPlayers","player","concat","addPlayer","teamSelect","newPlayers","slice","map","item","id","editPlayer","filter","removePlayer","Header","children","subheader","className","Nav","Fragment","Navbar","Player","props","name","player_name","skill","changeable","handleDelete","bind","handleEdit","handleSubmit","handleName","handleUpdateSkill","this","onLoad","onDelete","setState","e","newName","target","value","preventDefault","onUpdate","skillBadge","skillColour","Card","style","width","background","Body","Form","onSubmit","Group","controlId","Label","Control","onChange","placeholder","onClick","Title","fontSize","backgroundColor","Component","axios","create","baseURL","headers","Accept","getPlayers","dispatch","get","then","data","connect","patch","patchPlayer","delete","Players","valid","handleSkill","onClear","disabled","length","htmlFor","autoFocus","class","CardDeck","textAlign","marginLeft","key","handleClear","to","post","postPlayer","TeamRoster","firstTeam","team","secondTeam","i","Footer","alt","src","GitHubLogo","App","exact","path","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.920ba876.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github_logo_white.d19bbdb4.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initial = {\n    // Initialise players as an ampty array ready for API request(s)\n    players: [],\n  }\n  \n  export default initial;\n  ","import initial from \"./initial\";\n\n// spread operator copies players array from initial.js to the players object from the database\nconst setPlayers = (state, { players }) => {\n  return {\n    ...state,\n    players: players\n  };\n};\n\n// concatenates the new player object that is passed in from the database onto the players array\nconst addPlayer = (state, { player }) => {\n  return {\n    ...state,\n    players: state.players.concat(player)\n  };\n};\n\n// replace unassigned players array with $sortedPlayers array using spread operator\nconst teamSelect = (state, { players }) => {\n  return {\n    ...state,\n    players: players\n  };\n};\n\nconst editPlayer = (state, { player }) => {\n\n  let playerArray = state.players.slice()\n\n  let newPlayers = playerArray.map(item => {\n    if (item.id === player.id) {\n      return player\n    } else {\n      return item\n    }\n  })\n\n  return {\n    ...state,\n    players: newPlayers\n  };\n};\n\nconst removePlayer = (state, { id }) => {\n\n  let playerArray = state.players.slice()\n\n  let newPlayers = playerArray.filter(item => item.id !== id)\n\n  return {\n    ...state,\n    players: newPlayers\n  };\n};\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"setPlayers\": return setPlayers(state, action);\n    case \"addPlayer\": return addPlayer(state, action);\n    case \"resetPlayers\": return initial;\n    case \"teamSelect\": return teamSelect(state, action);\n    case \"editPlayer\": return editPlayer(state, action);\n    case \"removePlayer\": return removePlayer(state, action);\n    default: return state;\n  }\n};\n\nexport default reducer;","import React from \"react\";\n\nconst Header = ({ children, subheader }) => (\n  <header className=\"headercontainer\">\n    <h1 className=\"headercontainer__main\">\n      { children }\n    </h1>\n\n    <h5 className=\"headercontainer__subheader\">{ subheader }</h5>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\nconst Nav = () => (\n<React.Fragment>\n    <Navbar className=\"justify-content-center\">\n        <h1 className=\"title\">Team 5elector</h1>\n    </Navbar>\n\n</React.Fragment>\n);\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\n\n\nclass Player extends Component {\n  constructor(props) {\n    super(props) \n\n    this.state = {\n      name: this.props.player.player_name,\n      skill: this.props.player.skill,\n      changeable: false\n    }\n\n\n\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleName = this.handleName.bind(this);\n    this.handleUpdateSkill = this.handleUpdateSkill.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onLoad();\n  }\n\n  handleDelete() {\n    this.props.onDelete();\n  }\n\n  handleEdit() {\n\n    this.setState({\n      changeable: true,\n    });\n\n  }\n\n  handleName(e) {\n    let newName = e.target.value;\n\n    this.setState({\n      name: newName,\n    });\n\n  }\n\n  handleUpdateSkill(e) {\n\n    e.preventDefault();\n\n    let skill = +e.target.value;\n\n    this.setState({\n      skill: skill,\n    });\n\n  }\n\n  handleSubmit(e) {\n\n    e.preventDefault();\n\n    let player_name = this.state.name;\n    let skill = this.state.skill\n\n    this.setState({\n      changeable: false\n    });\n\n    this.props.onUpdate(player_name, skill);\n  }\n\n  render() {\n\n    const { player } = this.props;\n    const { changeable, name } = this.state;\n\n    let skillBadge = player.skill === 1 ? \"Very Poor\" : player.skill === 2 ? \"Poor\" : player.skill === 3 ? \"Average\" : player.skill === 4 ? \"Good\" : \"Excellent\";\n\n    let skillColour = player.skill === 1 ? \"darkred\" : player.skill === 2 ? \"darkorange\" : player.skill === 3 ? \"orange\" : player.skill === 4 ? \"lightgreen\" : \"green\";\n\n    return (\n      <React.Fragment>\n        <Card className=\"playercard\" style={{ width: '25vw', background: \" rgba(255, 255, 255, 0.5)\" }}>\n          <Card.Body>\n            { changeable ? \n              <Form onSubmit={ this.handleSubmit }>\n                <Form.Group controlId=\"updateName\">\n                  <Form.Label>Name:</Form.Label>\n                  <Form.Control onChange={ this.handleName }type=\"text\" placeholder={ name }/>\n                </Form.Group>\n                <Form.Group controlId=\"updateSkill\" className=\"updateskill\">\n                  <p>Skill:</p>\n                    <button onClick={ (e) => this.handleUpdateSkill(e) } value=\"1\" style={{ background: \"darkred\" }}>1</button>\n                    <button onClick={ (e) => this.handleUpdateSkill(e) } value=\"2\" style={{ background: \"darkorange\" }}>2</button>\n                    <button onClick={ (e) => this.handleUpdateSkill(e) } value=\"3\" style={{ background: \"orange\" }}>3</button>\n                    <button onClick={ (e) => this.handleUpdateSkill(e) } value=\"4\" style={{ background: \"lightgreen\" }}>4</button>\n                    <button onClick={ (e) => this.handleUpdateSkill(e) } value=\"5\" style={{ background: \"green\" }}>5</button>\n                </Form.Group>\n                <button className=\"playercard__update\" type=\"submit\">Update</button>\n              </Form>\n            : <><Card.Title className=\"playercard__name\" style={{ fontSize: \"2.2rem\"}}>{ player.player_name }</Card.Title> \n            <div className=\"playercard__skill\">\n              <p className=\"playercard__ability\">Skill Level:</p>\n              <div className=\"skillbadge\" style={{ backgroundColor: skillColour }}>\n                { skillBadge }\n              </div>\n            </div>\n            <div className=\"playercard__buttons\">\n              <button className=\"playercard__buttons_edit\" onClick={ this.handleEdit }>Edit</button>\n              <button className=\"playercard__buttons_delete\" onClick={ this.handleDelete }>Delete</button>\n            </div></>}\n          </Card.Body> \n        </Card>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Player;","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://cors-anywhere.herokuapp.com/https://tranquil-beyond-86261.herokuapp.com/api\",\n  headers: {\n    Accept: \"application/json\",\n  },\n});","import axios from \"../axios\";\n\nimport { setPlayers, addPlayer, resetPlayers, teamSelect, editPlayer, removePlayer } from \"./state\";\n\nexport const getPlayers = () => dispatch => {\n  axios.get(\"/players\").then(({ data }) => {\n    const players = data;\n    dispatch(setPlayers(players));\n  });\n};\n\nexport const postPlayer = (player_name, skill) => dispatch => {\n  axios.post(\"/players\", {\n    player_name: player_name,\n    skill: skill\n  }).then(({ data }) => {\n    const player = data.data;\n    dispatch(addPlayer(player));\n  });\n};\n\nexport const deletePlayers = () => dispatch => {\n  axios.delete(\"/players\").then(() => {\n    dispatch(resetPlayers());\n  });\n};\n\nexport const assignTeam = () => dispatch => {\n  axios.get(\"/teams\").then(({ data }) => {\n    const players = data\n    dispatch(teamSelect(players));\n  });\n};\n\nexport const patchPlayer = (id, player_name, skill) => dispatch => {\n  axios.patch(`/players/${id}`, {\n    player_name: player_name,\n    skill: skill\n  }).then(({ data }) => {\n    const player = data.data;\n    dispatch(editPlayer(player));\n  });\n};\n\nexport const deletePlayer = (id) => dispatch => {\n  axios.delete(`/players/${id}`).then(() => {\n    dispatch(removePlayer(id));\n  });\n};","export const setPlayers = (players) => {\n  return {\n    type: \"setPlayers\",\n    players: players,\n  };\n};\n\nexport const addPlayer = (player) => {\n  return {\n    type: \"addPlayer\",\n    player: player,\n  };\n};\n\nexport const resetPlayers = () => {\n  return {\n    type: \"resetPlayers\",\n  };\n};\n\nexport const teamSelect = (players) => {\n  return {\n    type: \"teamSelect\",\n    players: players,\n  };\n};\n\nexport const editPlayer = (player) => {\n  return {\n    type: \"editPlayer\",\n    player: player,\n  };\n};\n\nexport const removePlayer = (id) => {\n  return {\n    type: \"removePlayer\",\n    id: id\n  };\n};","import { connect } from \"react-redux\";\n\nimport Player from \"../components/Player\";\n\nimport { patchPlayer, deletePlayer, getPlayers } from \"../data/actions/api\";\n\nconst mapDispatchToProps = (dispatch, { player }) => {\n  return {\n    onLoad: () => dispatch(getPlayers()),\n    onUpdate: (player_name, skill) => dispatch(patchPlayer(player.id, player_name, skill)),\n    onDelete: () => dispatch(deletePlayer(player.id)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Player); ","import React, { Component } from \"react\";\nimport { HashRouter as Router, Link } from \"react-router-dom\";\n\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Player from \"../containers/Player\";\n\n\nclass Players extends Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      skill: null,\n      valid: false,\n    }\n\n    this.handleName = this.handleName.bind(this);\n    this.handleSkill = this.handleSkill.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // using the lifecycle method that occurs when the page loads to call the onLoad property, which gets the players from the database\n  componentDidMount() {\n    this.props.onLoad();\n  }\n\n  handleName(e) {\n\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  handleSkill(e) {\n\n    e.preventDefault();\n\n    this.setState({\n      skill: e.target.value,\n      valid: true,\n    });\n\n  }\n\n  handleSubmit(e) {\n\n    e.preventDefault();\n\n    let player_name = this.state.name;\n    let skill = this.state.skill;\n\n    this.props.onSubmit(player_name, skill);\n\n    this.setState({\n      name: \"\",\n      skill: null,\n      valid: false,\n    });\n\n  }\n\n  // allows the player to delete the database to start fresh\n  handleClear(e) {\n    e.preventDefault();\n\n    this.props.onClear();\n  }\n\n  render() {\n\n    // destructuring the state and props objects\n    let { players } = this.props;\n    const { name } = this.state;\n\n    // check inputs are valid\n    let disabled = true ? (name.length < 1 || this.state.valid === false) : false;\n\n    return(\n      <Router>\n        <React.Fragment>\n          \n          <div className=\"formcontainer\">\n          <h5 className=\"formheader\">Add a Player:</h5>\n            <form className=\"form\" onSubmit={ this.handleSubmit }>\n              <div className=\"formGroup\">\n                <label htmlFor=\"player_name\">Name: </label>\n                <input className=\"name-input\" id=\"player_name\" onChange={ this.handleName } value={ name } autoFocus placeholder=\"Name...\"></input>\n              </div>\n              <div className=\"formGroup skillselect__group\">\n                <label htmlFor=\"skill\" className=\"skill__label\">Skill Level: </label>\n        \n                <button onClick={ (e) => this.handleSkill(e) } value=\"1\" style={{ background: \"darkred\" }}>1</button>\n                <button onClick={ (e) => this.handleSkill(e) } value=\"2\" style={{ background: \"darkorange\" }}>2</button>\n                <button onClick={ (e) => this.handleSkill(e) } value=\"3\" style={{ background: \"orange\" }}>3</button>\n                <button onClick={ (e) => this.handleSkill(e) } value=\"4\" style={{ background: \"lightgreen\" }}>4</button>\n                <button onClick={ (e) => this.handleSkill(e) } value=\"5\" style={{ background: \"green\" }}>5</button>\n              </div>\n              <button type=\"submit\" className=\"add-player\" disabled={ disabled }>Add</button>\n            </form>\n          </div>\n       \n          { disabled ? <div class=\"player-error\">Please enter a player name and select a skill level.</div> : null }\n \n          <h4 className=\"playercard__grid__title\">Players:</h4>\n\n          \n          { players.length ?\n            <div className=\"playercard__grid\">\n                <CardDeck style={{ textAlign: \"center\", marginLeft: \"8vw\"}}>\n                    { players.map(player => (\n                    <div key={ player.id }>\n                      <Player player={ player }/>\n                    </div>\n                    ))} \n                </CardDeck>\n            </div>\n              :\n            <div className=\"player-error\">There are no players!</div>\n          }\n\n          <div className=\"button-links\">\n            <div className=\"remove-players\">\n              <button onClick={ (e) => this.handleClear(e) }>Remove all players</button>\n            </div>\n            <Link to=\"/teams\">\n              <div className=\"assign-teams\">\n                <button><span>Assign Teams</span></button>\n              </div>\n            </Link>\n          </div>\n        </React.Fragment>\n      </Router>\n    )\n  }\n};\n\nexport default Players;","// import connect fx for use on export\nimport { connect } from \"react-redux\";\n\n// import our Players component\nimport Players from \"../components/Players\";\n\nimport { getPlayers, postPlayer, deletePlayers } from \"../data/actions/api\";\n\n// map Player state to Player props\nconst mapStateToProps = state => {\n  return {\n    players: state.players,\n  };\n};\n\n// onEdit/onDelete goes here\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLoad: () => dispatch(getPlayers()),\n    onSubmit: (player_name, skill) => dispatch(postPlayer(player_name, skill)),\n    onClear: () => dispatch(deletePlayers()), \n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Players);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Player from \"../components/Player\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n\nclass TeamRoster extends Component {\n\n    // onLoad property must be called in order for assignTeam to be called from the API\n    // Lifecycle method calls this on page load ('did mount')\n    componentDidMount() {\n        this.props.onLoad()\n    }\n\n    render() {\n\n        // destructure props into players\n        // { players } is an array of objects that each represent a player\n        const { players } = this.props;\n\n        // Iterate over players array and return those with team attribute of 1\n        let firstTeam = players.filter(player => player.team === 1);\n\n        // Iterate over players array and return those with team attribute of 2\n        let secondTeam = players.filter(player => player.team === 2);\n\n        return(\n            <React.Fragment>\n                <div>\n                    <div>\n                        <h3 className=\"team-title\">Team One</h3>\n                        <div className=\"teamroster\">\n                            <CardDeck style={{ textAlign: \"center\"}}>\n                                { firstTeam.map((player, i) => (\n                                    <div className=\"teamroster__card\">\n                                        <Player key={ i } player={ player }/>\n                                    </div>\n                                ))}\n                            </CardDeck>\n                        </div>\n                    </div>\n                    <div>\n                        <h3 className=\"team-title\">Team Two</h3>\n                        <div className=\"teamroster\">\n                            <CardDeck>\n                                { secondTeam.map((player, i) => (\n                                    <div className=\"teamroster__card\">\n                                        <Player key={ i } player={ player }/>\n                                    </div>\n                                ))}\n                            </CardDeck>\n                        </div>\n                    </div>\n                    <Link to=\"/\">\n                        <div className=\"back-home\">\n                            <button><span>Back</span></button>\n                        </div>\n                    </Link>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default TeamRoster;","import { connect } from \"react-redux\";\nimport { assignTeam } from \"../data/actions/api\";\n\nimport TeamRoster from \"../components/TeamRoster\";\n\nconst mapStateToProps = state => {\n  return {\n    players: state.players,\n  };\n};\n\n// When page is refreshed the data must still be retained to be passed to render()\n// onLoad function dispatches assignTeam action on page load\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLoad: () => dispatch(assignTeam()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamRoster);","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport GitHubLogo from \"../assets/github_logo_white.png\";\n\n\nconst Footer = () => (\n  <footer className=\"footercontainer\">\n    <h6 className=\"footercontainer__text\">&copy; Kieran Cott, 2020</h6>\n    <div className=\"footercontainer__githublink\">\n        <p className=\"footercontainer__githublink__text\">View code on GitHub</p>\n        <Link to=\"https://github.com/kierancott/football-team-selector\"><img className=\"githublogo\" alt={\"github logo\"} src={ GitHubLogo }/></Link>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\n\nimport {\n  HashRouter as Router,\n  Route,\n} from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Nav from \"./components/Nav\";\nimport Players from \"./containers/Players\";\nimport TeamRoster from \"./containers/TeamRoster\";\nimport Footer from \"./components/Footer\";\n\n\nconst App = () => (\n  <Router>\n    <React.Fragment className=\"main-body\">\n      <Nav/>\n      <Route exact path=\"/\">\n        <Header\n          children={ \"Football Team Selector\" }\n          subheader={ \"Add players to your roster and generate two equally balanced teams\" }\n        />\n        <Players/>\n      </Route>\n      <Route path=\"/teams\">\n        <TeamRoster/>\n      </Route>\n      <Footer/>\n    </React.Fragment>\n  </Router>\n\n);\n\n// export our component\nexport default App;\n   ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport { Provider } from \"react-redux\";\n\nimport initial from \"./data/initial\";\nimport reducer from \"./data/reducer\";\n\nimport App from './App';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initial, composeEnhancers(applyMiddleware(thunk)));\n\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}